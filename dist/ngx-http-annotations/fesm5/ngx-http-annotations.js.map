{"version":3,"file":"ngx-http-annotations.js.map","sources":["ng://ngx-http-annotations/src/ngx-http-annotations.utils.ts","ng://ngx-http-annotations/src/ngx-http-annotations.module.ts","ng://ngx-http-annotations/public_api.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams, HttpHeaders } from \"@angular/common/http\";\r\nimport { HttpObserve } from \"@angular/common/http/src/client\";\r\n\r\ninterface httpRequestOptions {\r\n  body?: any;\r\n  headers?: HttpHeaders;\r\n  params?: HttpParams;\r\n  observe?: HttpObserve;\r\n  reportProgress?: boolean;\r\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\r\n  withCredentials?: boolean;\r\n}\r\n\r\n\r\nexport function observe(annotations: any) {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['observe', annotations, ...args]);\r\n}\r\nexport function path(annotations: any) {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['path', annotations, ...args]);\r\n}\r\nexport function body(annotations: any) {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['body', annotations, ...args]);\r\n}\r\nexport function query(annotations: any) {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['query', annotations, ...args]);\r\n}\r\nexport function headers(annotations: any) {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['headers', annotations, ...args]);\r\n}\r\nexport function produces(annotations: 'arraybuffer' | 'blob' | 'json' | 'text') {\r\n  return (...args: any[]) => HttpRestUtils.decorate.apply(this, ['produces', annotations, ...args]);\r\n}\r\n\r\ntype ResourceMetadataType = 'class'|'methods'|'params'|'props';\r\ninterface ExtraEntityData {\r\n  keyName: string;\r\n  index: number;\r\n}\r\nconst RESOURSE_METADATA_ROOT = 'resources_metadata';\r\n// @dynamic\r\nexport class HttpRestUtils {\r\n\r\n  public static http: HttpClient = null;\r\n\r\n  public static decorate(decoratorName: string, annotations: any, ...args: any[]) {\r\n    switch (args.length) {\r\n        case 1: {\r\n          const [target] = args;\r\n          HttpRestUtils.constructMetadata.apply(this, [ decoratorName, 'class', annotations, target.prototype ]);\r\n          break;\r\n        }\r\n        case 2: {\r\n          const [target, key] = args;\r\n          HttpRestUtils.constructMetadata.apply(this, [ decoratorName, 'props', annotations, target ]);\r\n          break;\r\n        }\r\n        case 3:\r\n          if (typeof args[2] === 'number') {\r\n            const [target, keyName, index] = args;\r\n            HttpRestUtils.constructMetadata.apply(this, [ decoratorName, 'params', annotations, target, { keyName, index } ]);\r\n            break;\r\n          } else {\r\n            const [target, keyName, descriptor] = args;\r\n            HttpRestUtils.constructMetadata.apply(this, [ decoratorName, 'methods', annotations, target, { keyName } ]);\r\n            break;\r\n          }\r\n        default:\r\n          throw new Error('Decorators are not valid here!');\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Set up metadada\r\n   * @param type Entity type\r\n   * @param value Value of metadata\r\n   * @param target Prototype of current object\r\n   * @param metaName Decorator name\r\n   * @param entityData Entity extra data\r\n   */\r\n  private static constructMetadata(metaName: string, entityType: ResourceMetadataType, value: any, target: any, entityData?: ExtraEntityData) {\r\n    target[RESOURSE_METADATA_ROOT] = target[RESOURSE_METADATA_ROOT] || {};\r\n    target[RESOURSE_METADATA_ROOT][entityType] = target[RESOURSE_METADATA_ROOT][entityType] || {};\r\n\r\n    const rootMetadata = target[RESOURSE_METADATA_ROOT];\r\n    const metadataObj = target[RESOURSE_METADATA_ROOT][entityType];\r\n    if (entityData && entityData.keyName) {\r\n      metadataObj[entityData.keyName] = metadataObj[entityData.keyName] || {};\r\n    }\r\n    if (entityData && entityData.index != null) {\r\n      metadataObj[entityData.keyName][metaName] = metadataObj[entityData.keyName][metaName] || {};\r\n    }\r\n    switch (entityType) {\r\n      case 'class': metadataObj[metaName] = value; break;\r\n      case 'props': metadataObj[metaName] = value; break;\r\n      case 'methods': metadataObj[entityData.keyName][metaName] = value; break;\r\n      case 'params': metadataObj[entityData.keyName][metaName][value || 'default'] = entityData.index;\r\n    }\r\n\r\n    target[RESOURSE_METADATA_ROOT][entityType] = metadataObj;\r\n  }\r\n\r\n  public static requestMethod(requestMethodName: string): any {\r\n      // @dynamic\r\n    return (target: any, key: string, descriptor: any) => {\r\n      descriptor.value = function (...args: any[]) {\r\n        const url = HttpRestUtils.collectUrl(target, key, args);\r\n        const body = HttpRestUtils.collectBody(target, key, args);\r\n        const search = HttpRestUtils.collectQueryParams(target, key, args);\r\n        const headers = HttpRestUtils.collectHeaders(target, key, args);\r\n        const producesType = HttpRestUtils.produce(target, key, args);\r\n        const observe = HttpRestUtils.getObserve(target, key, args)\r\n        const params: httpRequestOptions = {\r\n          body,\r\n          params: search,\r\n          headers,\r\n          responseType: producesType,\r\n          observe\r\n        };\r\n        return HttpRestUtils.http.request(requestMethodName, url, params);\r\n      };\r\n    };\r\n  }\r\n\r\n  private static getObserve(target: any, methodName: string, args: any[]) {\r\n    if (target[RESOURSE_METADATA_ROOT].methods\r\n      && target[RESOURSE_METADATA_ROOT].methods[methodName]) {\r\n       return target[RESOURSE_METADATA_ROOT].methods[methodName].observe;\r\n     }\r\n     return undefined;\r\n  }\r\n\r\n  private static produce(target: any, methodName: string, args: any[]) {\r\n    if (target[RESOURSE_METADATA_ROOT].methods\r\n     && target[RESOURSE_METADATA_ROOT].methods[methodName]) {\r\n      return target[RESOURSE_METADATA_ROOT].methods[methodName].produces;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private static collectUrl(target: any, methodName: string, args: any[]) {\r\n    const baseUrl = target[RESOURSE_METADATA_ROOT] && target[RESOURSE_METADATA_ROOT].class\r\n                  ? target[RESOURSE_METADATA_ROOT].class.path\r\n                  : '';\r\n    const methodUrl = target[RESOURSE_METADATA_ROOT].methods && target[RESOURSE_METADATA_ROOT].methods[methodName]\r\n                    ? target[RESOURSE_METADATA_ROOT].methods[methodName].path\r\n                    : '';\r\n    const isRelativePath = `${baseUrl}${methodUrl}`[0] === '/';\r\n    const methodUrlWithParams\r\n      = [baseUrl, methodUrl]\r\n        .filter(path => path)\r\n        .join('/')\r\n        .split('/')\r\n        .map(path => {\r\n          if ( path[0] === ':') {\r\n            const paramName = path.substring(1);\r\n            const index = target[RESOURSE_METADATA_ROOT].params\r\n                       && target[RESOURSE_METADATA_ROOT].params[methodName]\r\n                       && target[RESOURSE_METADATA_ROOT].params[methodName].path\r\n                        ? target[RESOURSE_METADATA_ROOT].params[methodName].path[paramName]\r\n                        : '';\r\n            return args[index];\r\n          }\r\n          return path;\r\n        })\r\n        .filter(path => path)\r\n        .join('/');\r\n\r\n    if (!isRelativePath) {\r\n      const [absolutePrefix, ...paths] = methodUrlWithParams.split('/');\r\n      return `${ absolutePrefix }//${ paths.join('/') }`;\r\n    }\r\n    return `/${ methodUrlWithParams }`;\r\n  }\r\n\r\n  private static collectBody(target: any, methodName: string, args: any[]) {\r\n    if (!target[RESOURSE_METADATA_ROOT].params\r\n     || !target[RESOURSE_METADATA_ROOT].params[methodName]\r\n     || !target[RESOURSE_METADATA_ROOT].params[methodName].body) return undefined;\r\n\r\n    const index = target[RESOURSE_METADATA_ROOT].params[methodName].body.default;\r\n    return args[index];\r\n  }\r\n\r\n  private static collectQueryParams(target: any, methodName: string, args: any[]) {\r\n    if (!target[RESOURSE_METADATA_ROOT].params\r\n     || !target[RESOURSE_METADATA_ROOT].params[methodName]\r\n     || !target[RESOURSE_METADATA_ROOT].params[methodName].query) return undefined;\r\n\r\n    let queryParams = new HttpParams();\r\n    const queryParamsObjectIndex = target[RESOURSE_METADATA_ROOT].params[methodName].query.default;\r\n    const queryMetadata = target[RESOURSE_METADATA_ROOT].params[methodName].query;\r\n    const queryParamsCollection = queryParamsObjectIndex != undefined\r\n                                ? args[queryParamsObjectIndex]\r\n                                : Object.keys(queryMetadata).reduce((mergedObj, paramName) =>\r\n                                  Object.assign(mergedObj, { [paramName]: args[queryMetadata[paramName]] }), {}\r\n                                );\r\n\r\n    Object.keys(queryParamsCollection)\r\n      .forEach(paramName => {\r\n        let value = queryParamsCollection[paramName];\r\n        if (!Array.isArray(value)) { value = [ value ]; }\r\n        value.forEach((curParam: any) => queryParams = queryParams.append(paramName, curParam));\r\n      });\r\n    return queryParams;\r\n  }\r\n\r\n  private static collectHeaders(target: any, methodName: string, args: any[]) {\r\n    const classHeaders = target[RESOURSE_METADATA_ROOT].class ? target[RESOURSE_METADATA_ROOT].class.headers : {};\r\n    const methodHeaders = target[RESOURSE_METADATA_ROOT].methods && target[RESOURSE_METADATA_ROOT].methods[methodName]\r\n                        ? target[RESOURSE_METADATA_ROOT].methods[methodName].headers\r\n                        : {};\r\n    const mergedHeaders = Object.assign({}, classHeaders, methodHeaders);\r\n\r\n    const httpHeaders = new HttpHeaders();\r\n    for (const header in mergedHeaders) {\r\n      httpHeaders.append(header, mergedHeaders[header]);\r\n    }\r\n    return httpHeaders;\r\n  }\r\n}","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { HttpRestUtils } from \"./ngx-http-annotations.utils\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n// @dynamic\r\n@NgModule({\r\n    imports: [HttpClientModule],\r\n    providers: [\r\n      { provide: APP_INITIALIZER, useFactory: onAppInit, multi: true, deps: [HttpClient] }\r\n    ]\r\n})\r\nexport class HttpRestModule {\r\n}\r\n\r\nexport function onAppInit(http: HttpClient) {\r\n  return function () {\r\n    HttpRestUtils.http = http;\r\n  }\r\n}","export * from './src/ngx-http-annotations.module';\r\nexport * from './src/ngx-http-annotations.utils';\r\nimport { Response } from '@angular/http';\r\nimport { HttpRestUtils, path, body, query, headers, produces, observe } from \"./src/ngx-http-annotations.utils\";\r\n\r\nexport let Path = path;\r\nexport let PathParam = path;\r\nexport let Body = body(null);\r\nexport let Query = query(null);\r\nexport let QueryParam = query;\r\nexport let QueryParams = query(null);\r\nexport let Observe = observe;\r\n\r\n// Headers\r\nexport let Headers = headers;\r\n\r\n// Produces\r\nexport let Produces = produces;\r\n\r\n// Request methods\r\nexport let GET = HttpRestUtils.requestMethod('Get');\r\nexport let POST = HttpRestUtils.requestMethod('Post');\r\nexport let PUT = HttpRestUtils.requestMethod('Put');\r\nexport let DELETE = HttpRestUtils.requestMethod('Delete');\r\nexport let OPTIONS = HttpRestUtils.requestMethod('Options');\r\nexport let HEAD = HttpRestUtils.requestMethod('Head');\r\nexport let PATCH = HttpRestUtils.requestMethod('Patch');"],"names":[],"mappings":";;;;;;;;;;;;AAgBA,iBAAwB,WAAgB;IAAxC,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,SAAS,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CAClG;;;;;AACD,cAAqB,WAAgB;IAArC,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,MAAM,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CAC/F;;;;;AACD,cAAqB,WAAgB;IAArC,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,MAAM,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CAC/F;;;;;AACD,eAAsB,WAAgB;IAAtC,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,OAAO,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CAChG;;;;;AACD,iBAAwB,WAAgB;IAAxC,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,SAAS,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CAClG;;;;;AACD,kBAAyB,WAAqD;IAA9E,iBAEC;IADC,OAAO;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,YAAG,UAAU,EAAE,WAAW,GAAK,IAAI,EAAE;KAAA,CAAC;CACnG;AAOD,qBAAM,sBAAsB,GAAG,oBAAoB,CAAC;;;;;;;;;;IAMpC,sBAAQ;;;;;;cAAC,aAAqB,EAAE,WAAgB;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC5E,QAAQ,IAAI,CAAC,MAAM;YACf,KAAK,CAAC,EAAE;gBACN,0BAAO,cAAM,CAAS;gBACtB,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAE,aAAa,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC,SAAS,CAAE,CAAC,CAAC;gBACvG,MAAM;aACP;YACD,KAAK,CAAC,EAAE;gBACN,0BAAO,cAAM,EAAE,WAAG,CAAS;gBAC3B,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAE,aAAa,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,CAAE,CAAC,CAAC;gBAC7F,MAAM;aACP;YACD,KAAK,CAAC;gBACJ,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAC/B,0BAAO,cAAM,EAAE,eAAO,EAAE,aAAK,CAAS;oBACtC,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,CAAE,CAAC,CAAC;oBAClH,MAAM;iBACP;qBAAM;oBACL,0BAAO,cAAM,EAAE,eAAO,EAAE,kBAAU,CAAS;oBAC3C,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAE,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,SAAA,EAAE,CAAE,CAAC,CAAC;oBAC5G,MAAM;iBACP;YACH;gBACE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;;;;;;;;;;;IAWU,+BAAiB;;;;;;;;;cAAC,QAAgB,EAAE,UAAgC,EAAE,KAAU,EAAE,MAAW,EAAE,UAA4B;QACxI,MAAM,CAAC,sBAAsB,CAAC,GAAG,MAAM,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;QACtE,MAAM,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAE9F,qBAAM,YAAY,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;QACpD,qBAAM,WAAW,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE;YACpC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACzE;QACD,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,IAAI,IAAI,EAAE;YAC1C,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SAC7F;QACD,QAAQ,UAAU;YAChB,KAAK,OAAO;gBAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YACnD,KAAK,OAAO;gBAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YACnD,KAAK,SAAS;gBAAE,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YACzE,KAAK,QAAQ,EAAE,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;SACjG;QAED,MAAM,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC;;;;;;IAG7C,2BAAa;;;;cAAC,iBAAyB;;QAEnD,OAAO,UAAC,MAAW,EAAE,GAAW,EAAE,UAAe;YAC/C,UAAU,CAAC,KAAK,GAAG;gBAAU,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBACzC,qBAAM,GAAG,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBACxD,qBAAM,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC1D,qBAAM,MAAM,GAAG,aAAa,CAAC,kBAAkB,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBACnE,qBAAM,OAAO,GAAG,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBAChE,qBAAM,YAAY,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;gBAC9D,qBAAM,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;gBAC3D,qBAAM,MAAM,GAAuB;oBACjC,IAAI,MAAA;oBACJ,MAAM,EAAE,MAAM;oBACd,OAAO,SAAA;oBACP,YAAY,EAAE,YAAY;oBAC1B,OAAO,SAAA;iBACR,CAAC;gBACF,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;aACnE,CAAC;SACH,CAAC;;;;;;;;IAGW,wBAAU;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QACpE,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO;eACrC,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACtD,OAAO,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC;SACnE;QACD,OAAO,SAAS,CAAC;;;;;;;;IAGL,qBAAO;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QACjE,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO;eACtC,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACtD,OAAO,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC;SACpE;QACD,OAAO,SAAS,CAAC;;;;;;;;IAGJ,wBAAU;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QACpE,qBAAM,OAAO,GAAG,MAAM,CAAC,sBAAsB,CAAC,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,KAAK;cACtE,MAAM,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,IAAI;cACzC,EAAE,CAAC;QACnB,qBAAM,SAAS,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;cAC5F,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI;cACvD,EAAE,CAAC;QACrB,qBAAM,cAAc,GAAG,CAAA,KAAG,OAAO,GAAG,SAAW,EAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QAC3D,qBAAM,mBAAmB,GACrB,CAAC,OAAO,EAAE,SAAS,CAAC;aACnB,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,GAAA,CAAC;aACpB,IAAI,CAAC,GAAG,CAAC;aACT,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,UAAA,IAAI;YACP,IAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACpB,qBAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpC,qBAAM,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM;uBACrC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;uBACjD,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI;sBACtD,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;sBACjE,EAAE,CAAC;gBACjB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;YACD,OAAO,IAAI,CAAC;SACb,CAAC;aACD,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,GAAA,CAAC;aACpB,IAAI,CAAC,GAAG,CAAC,CAAC;QAEf,IAAI,CAAC,cAAc,EAAE;YACnB,iDAAO,sBAAc,EAAE,mBAAQ,CAAmC;YAClE,OAAW,cAAc,UAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAI,CAAC;SACpD;QACD,OAAO,MAAK,mBAAsB,CAAC;;;;;;;;IAGtB,yBAAW;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QACrE,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM;eACtC,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;eAClD,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI;YAAE,OAAO,SAAS,CAAC;QAE9E,qBAAM,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7E,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;;;;IAGN,gCAAkB;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QAC5E,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM;eACtC,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;eAClD,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK;YAAE,OAAO,SAAS,CAAC;QAE/E,qBAAI,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;QACnC,qBAAM,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/F,qBAAM,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC9E,qBAAM,qBAAqB,GAAG,sBAAsB,IAAI,SAAS;cACnC,IAAI,CAAC,sBAAsB,CAAC;cAC5B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,UAAC,SAAS,EAAE,SAAS;gBACvD,OAAA,MAAM,CAAC,MAAM,CAAC,SAAS,YAAI,GAAC,SAAS,IAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAG;;aAAA,EAAE,EAAE,CAC9E,CAAC;QAE9B,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC/B,OAAO,CAAC,UAAA,SAAS;YAChB,qBAAI,KAAK,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAAE,KAAK,GAAG,CAAE,KAAK,CAAE,CAAC;aAAE;YACjD,KAAK,CAAC,OAAO,CAAC,UAAC,QAAa,IAAK,OAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAA,CAAC,CAAC;SACzF,CAAC,CAAC;QACL,OAAO,WAAW,CAAC;;;;;;;;IAGN,4BAAc;;;;;;cAAC,MAAW,EAAE,UAAkB,EAAE,IAAW;QACxE,qBAAM,YAAY,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;QAC9G,qBAAM,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;cAC5F,MAAM,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO;cAC1D,EAAE,CAAC;QACzB,qBAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAErE,qBAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QACtC,KAAK,qBAAM,MAAM,IAAI,aAAa,EAAE;YAClC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;SACnD;QACD,OAAO,WAAW,CAAC;;yBA/KY,IAAI;wBA5CvC;;;;;;;ACAA;;;;gBAKC,QAAQ,SAAC;oBACN,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,SAAS,EAAE;wBACT,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE;qBACrF;iBACJ;;yBAVD;;;;;;AAcA,mBAA0B,IAAgB;IACxC,OAAO;QACL,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3B,CAAA;CACF;;;;;;AClBD,qBAKW,IAAI,GAAG,IAAI,CAAC;AACvB,qBAAW,SAAS,GAAG,IAAI,CAAC;AAC5B,qBAAW,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,qBAAW,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/B,qBAAW,UAAU,GAAG,KAAK,CAAC;AAC9B,qBAAW,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACrC,qBAAW,OAAO,GAAG,OAAO,CAAC;;AAG7B,qBAAW,OAAO,GAAG,OAAO,CAAC;;AAG7B,qBAAW,QAAQ,GAAG,QAAQ,CAAC;;AAG/B,qBAAW,GAAG,GAAG,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpD,qBAAW,IAAI,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACtD,qBAAW,GAAG,GAAG,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpD,qBAAW,MAAM,GAAG,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC1D,qBAAW,OAAO,GAAG,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC5D,qBAAW,IAAI,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACtD,qBAAW,KAAK,GAAG,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC;;;;;;;;;"}
